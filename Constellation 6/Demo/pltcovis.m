function fig_handle = pltcovis(auto_mode)

% Example function to plot common visibility for DGPS.
% The data are loaded from the file demoplt1.mat
% which is generated by the example function demoplt1.m
% Input:
%   auto_mode = optional flag (only include when in auto mode)

% Written by: Jimmy LaMance 9/5/97
% Copyright (c) 1998 by Constell, Inc.

% load in the data
load demoplt1;

if nargin < 1,
  % Get the screen size in pixels to use for location of plots
  set(0,'units','pixels');
  screen_size = get(0,'screensize');
  y_max = screen_size(2) + screen_size(4) - 60;
  x_max = screen_size(1) + screen_size(3) - 50;
  x_step = 110;
  y_step = 60 + y_max;

  % set the figure colors to be black background like Matlab 4
  colordef none;                               
  
  % generate the position error figure
  fig_handle = figure('color','black', ...
   'position',[30 50 x_max-30 y_max-50],  ...
   'NumberTitle','off', ...
   'Name','DGPS Common Visibility', ...
   'Tag','fign');
end;

% create the data matrix to be plotted
num_sats = [num_remote num_dgps];

% create a string for the plot title (to be put in the cell array)
title_string = sprintf('DGPS Common Visibility for %d km Baseline',...
                        round(base_line_km));                      

fig_title_cell={'DGPS Common Visibility';};
x = t_dop_plot ./ 60;
y = num_sats;
axis_label_cell = {'Minutes Since Start'; 'Number of Sats'; ...
                    title_string;};

legend_cell = {'Remote';...
               'Common'};

descriptive_text_cell = ...
 {'Common visibility of GPS or GLONASS satellites is essential for differential';
  'operation.  The Constellation Toolbox allows the user to compute the visibility at the';
  'base station, the remote receiver, and the common view satellites.  This example';
  'has a base station with a 10 deg elevation mask and a remote receiver with';
  'a 0 deg elevation mask.  The remote receiver sees more satellites than the base';
  'station. However, DGPS corrections are only available for common satellites.'};

if nargin < 1,
  text_win(fig_title_cell,x,y,axis_label_cell,legend_cell, ...
      descriptive_text_cell,1);

  % Determine the location for the plot in upper right corner
  x_min = x_max / 10;
  y_min = y_max / 10;

  % set the figure position
  set(fig_handle,'position',[x_min y_min x_max/1.25 y_max/1.25]);

else,
  fig_handle = gcf;
  text_win(fig_title_cell,x,y,axis_label_cell,legend_cell, ...
      descriptive_text_cell);
end;

% reset the axis such that the max and min y are +/-1 from the data
cx = axis;
axis([cx(1) cx(2) cx(3)-1 cx(4)+1]);

% end of PLTDOPER
